@import "./styles";
@import "./variables";


@include angular-material-theme(
  mat-light-theme(mat-palette($my-primary, 100), mat-palette($my-accent, 200), mat-palette($mat-green, 300))
);

.doo-loading-overlay {
  height: 100%;
  width: 100%;
  background: white;
  z-index: 100;
  opacity: 1;
}

.doo-loading-screen {
  background: $lighter-grey;
  padding-top: 200px;
  padding-bottom: 200px;
  width: 80%;
  text-align: center;
  margin: 15px;
  animation-duration: 0.5s;
  animation-name: loading;
  animation-iteration-count: infinite;
  animation-direction: alternate;
}

@keyframes loading {
  from {
    opacity: 0.4;
  }

  to {
    opacity: 0.2;
  }
}

.post-placeholder {
  margin: 15px;
  animation-duration: 0.5s;
  animation-name: fade;
  animation-iteration-count: infinite;
  animation-direction: alternate;
}

@keyframes fade {
  from {
    opacity: 0.8;
  }

  to {
    opacity: 0.3;
  }
}

//Effect variables for crumb item
$duration: 0.2s;
$distance: 8px;
$easeOutBack: cubic-bezier(0.175, 0.885, 0.32, 1.275);
.crumb-item {
  position: relative;
  padding-bottom: 8px;
  cursor: pointer;

  &:before,
  &:after {
    content: "";
    position: absolute;
    bottom: 2px;
    left: 0;
    right: 0;
    height: 2px;
  }
  &.primary-color:before,
  &.primary-color:after {
    background-color: $primary;
  }

  &.accent-color:before,
  &.accent-color:after {
    background-color: $accent;
  }

  &.white-color:before,
  &.white-color:after {
    background-color: white;
  }

  &.black-color:before,
  &.black-color:after {
    background-color: black;
  }

  &:before {
    opacity: 0;
    transform: translateY(-$distance);
    transition: transform 0s $easeOutBack, opacity 0s;
  }
  &:after {
    opacity: 0;
    transform: translateY($distance/2);
    transition: transform $duration $easeOutBack, opacity $duration;
  }
  &:hover,
  &:focus {
    &:before,
    &:after {
      opacity: 1;
      transform: translateY(0);
    }
    &:before {
      transition: transform $duration $easeOutBack, opacity $duration;
    }
    &:after {
      transition: transform 0s $duration $easeOutBack, opacity 0s $duration;
    }
  }
}

.primary-color {
  color: $primary;
}

.accent-color {
  color: $accent;
}

.white-color {
  color: white;
}

.black-background {
  background: black !important;
}

.primary-background {
  background: $primary !important;
}

.primary-background-opacity {
  background: rgba($primary, 0.5);
}

.accent-background {
  background: $accent !important;
}

.accent-background-opacity {
  background: rgba($accent, 0.5);
}

.white-background {
  background: white !important;
}

.primary-fill {
  fill: $primary !important;
}

.white-fill {
  fill: white !important;
}

.black-color {
  color: black;
}

.black-shadow {
  text-shadow: 1px 1px 5px #000000;
}

.white-shadow {
  text-shadow: 1px 1px 5px white;
}

.primary-shadow {
  text-shadow: 1px 1px 5px $primary;
}

.accent-shadow {
  text-shadow: 1px 1px 5px $accent;
}

.doo-cta-btn {
  padding: 15px 35px !important;
  font-size: 18px;
  letter-spacing: 4px;
}

@media only screen and (max-width: 850px) {
  .doo-cta-btn {
    padding: 5px 15px !important;
    font-size: 16px;
    letter-spacing: 1px;
  }
}

.doo-light-card {
  background: rgba(255, 255, 255, 0.3);
  padding: 20px;
  box-shadow: 0px 0px 20px 0px $primary;
  border-radius: 5px;
}

@media only screen and (max-width: 600px) {
  .doo-light-card {
    background: rgba(255, 255, 255, 0.3);
    padding: 5px;
    box-shadow: none;
    border-radius: 0px;
  }
}
